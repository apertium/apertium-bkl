# Firstly, we need to define what tags should be considered sentence delimiters. For this example, only full stop is set as delimiter.
DELIMITERS = "<.>" ;

SUBREADINGS = LTR ; # Alternate, left-to-right

# We can define sets for common tag clusters
#LIST Case = (n s) (n p) ; # A set that matches either a Noun Singular or a Noun Plural

LIST Conj = conj ;
LIST Nominal = n prn ;
LIST Verb = v ;
LIST Adjective = adj ;
LIST Particle = part ;
LIST Post = post ;
LIST Separator = sent cm ;
LIST NotPosted = "fon" ;
LIST Response = resp ;
LIST Inst = (n ins) ;

SECTION

#SELECT Conj IF (1 Nominal) (1 Verb) ;
SELECT Conj IF (1 Nominal) ;
               #(1 (post)) ;

SELECT Conj IF (-1 Adjective) ;
SELECT Conj IF (-1 Separator) ;

SELECT Nominal IF (0 Nominal) (0 Adjective) (1 Adjective) ;
SELECT Adjective IF (0 Adjective) (0 Conj) (-1 Nominal) ;

REMOVE Response IF (-1 (*)) ;
REMOVE Response IF (1 (*)) ;

REMOVE NotPosted IF (0/1 Post) ;

SELECT (prn) ;

# `ane` should be <conj> if it is at the beginning of a sentence or preceeded by a comma.
# `ane` should be <adj> if it is preceeded by a nominal.
# `fas` should be <adj> if it's surrounded by words on either side, otherwise <resp>
# `giri ane` should be <n> <adj> respectively.

SELECT Inst IF ( NOT (1 Nominal) ) ;

# Resources:
# http://visl.sdu.dk/cg3.html
# http://groups.google.com/group/constraint-grammar
# http://kevindonnelly.org.uk/2010/05/constraint-grammar-tutorial/
# http://wiki.apertium.org/wiki/Constraint_Grammar
# http://wiki.apertium.org/wiki/Apertium_and_Constraint_Grammar

